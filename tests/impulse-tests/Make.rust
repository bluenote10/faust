#
# Makefile for testing the Faust compiler output
#

system := $(shell uname -s)
system := $(shell echo $(system) | grep MINGW > /dev/null && echo MINGW || echo $(system))
ifeq ($(system), MINGW)
 FAUST ?= ../../build/bin/faust.exe
 COMPARE := ./filesCompare.exe
else
 FAUST ?= ../../build/bin/faust
 COMPARE := ./filesCompare
endif
MAKE ?= make

outdir ?= rust
precision ?=		# filesCompare precision (empty by default)
FAUSTOPTIONS := -double

.PHONY: test
.DELETE_ON_ERROR:

dspfiles := $(wildcard dsp/*.dsp)

listfiles = $(dspfiles:dsp/%.dsp=ir/$1/%.ir)
listintermediate = $(dspfiles:dsp/%.dsp=ir/$1/%) $(dspfiles:dsp/%.dsp=ir/$1/%.cpp)

#all: filesCompare ir/$(outdir) $(call listfiles,$(outdir))
all: filesCompare
all: ir/$(outdir)
all: ir/rust/LPF.ir
all:
	echo "$(outdir)"
	#echo_args $(dspfiles)
	#echo_args $(call listfiles,$(outdir))

help:
	@echo "-------- FAUST impulse response tests --------"
	@echo "Available targets are:"
	@echo " 'all' (default): generate ir for all the dsp files using the given options"
	@echo
	@echo "Options:"
	@echo " 'outdir' 	   : define the output directory (default to '$(outdir)')"
	@echo " 'lang'         : used for faust -lang option (default to '$(lang)')"
	@echo " 'arch'         : used for faust -a option (default to '$(arch)')"
	@echo " 'FAUSTOPTIONS' : define additional faust options (default to $(FAUSTOPTIONS))"
	@echo " 'precision'    : define filesCompare expected precision (empty by default)"

#########################################################################
# output directories
ir/$(outdir):
	mkdir -p ir/$(outdir)

filesCompare:
	$(MAKE) filesCompare

#########################################################################
# rules
#ir/$(outdir)/%.ir: archs/rust/src/bin/%.rs reference/%.ir
ir/$(outdir)/%.ir: reference/%.ir
	$(FAUST) -lang rust $(FAUSTOPTIONS) -i -A ../../architecture -a archs/rust/architecture.rs dsp/$*.dsp -o archs/rust/src/bin/$*.rs
	cd archs/rust/ && cargo run --bin $* ../../$@ && cd ../..
	$(COMPARE) $@ reference/$(notdir $@) $(precision)

#.PHONY: archs/rust/src/bin/%.rs
#archs/rust/src/bin/%.rs: dsp/%.dsp
#$(FAUST) -lang rust $(FAUSTOPTIONS) -i -A ../../architecture -a archs/rust/architecture.rs $< -o $@
